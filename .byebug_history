c
Package.where(name: name)
name
c
Package.where(name: name)
Package.pluck(:name)
name
c
pkgid
n
c
dc
c
Category.where(name: params[:category]).first.id
params
c
Category.where(name: params[:category])
Category.where(name: params[:category]).first.id
params
c
params
dparams
c
@milk
c
@milk
@dahi
c
status
c
self
c
status
c
self
c
self
c
self
History.last.balance
History.last
History.lat
last
self.credit
self
c
result
result.count
c
result.count
c
params[:cash]
c
params
c
@history.valid?
n
c
@history.errors.full_messages
@history.valid?
c
@history.errors.full_messages
@history.errors.count
@history.valid?
@history
c
history.valid?
c
history.valid?
c
history.valid?
c
history.valid?
c
history.valid?
history
c
History.delete_all
c
History.delete_all
History.count
history.errors.count
history.errors
history.error
history.valid?
history.is_valid?
history.isvalid?
history.valid
c
history.errors.full_messages
history.errors
c
n
c
history.errors.count
history.errors.full_messages
history.errors
status
c
history.save
history
c
self
c
JSON.parse h.particular
h.particular
h=History.new(params[:order].permit!)
History.new(params[:order].permit!)
History.new(params[:order])
History.new( {"particular" => {"total"=>"ss"}})
History.new {"particular" => {"total"=>"ss"}}
History.new
History.new params[:order]
params[:order]
prams[:order]
params
c
x=History.new(debit: 100, slot: 'M', particular: "{/dfdfsf/}")
x=History.new(debit: 100, slot: 'M', particular: "{}")
x=History.new(debit: 100, slot: 'M', particular: "ddd")
x=History.new(debit: 100, slot: 'M')
x=History.new(debit: 100)
x=History.new()
x=History.new input_hash
input_hash
n
c
params
input_hash
n
c
n
c
n
history
n
c
x["particular"]
x={}
r
r["particular"] =  r["particular"].to_json
r["particular"]
r=params[:order]
params[:order]
c
x
x["particular"] = x["particular"].to_json
x["particular"]
x=params
params
c
JSON.parse result
result
c
History.where(created_at: from..to)c
History.where(created_at: from..to)
from = Date.parse("16-12-3")
from.date
from = Date.parse(params[:from])
History.last
History.where(created_at: from..to)
to = Date.parse(params[:to])
from = Date.parse(params[:from])
c
d["totoal Amount"]
d.keys
d[0]
d.count
d=JSON.parse History.where(created_at: from..to)[0].morning
JSON.parse History.where(created_at: from..to)[0].morning['total Amount']
JSON.parse History.where(created_at: from..to)[0].morning['total amount']
JSON.parse History.where(created_at: from..to)[0].morning
History.where(created_at: from..to)[0].morning
History.where(created_at: from..to)[0]
History.where(created_at: from..to)
History.where(created_at: from..to).count
History.where(created_at: from..to)
to = Date.parse(params[:to])
from = Date.parse(params[:from])
c
exit
x
n
x
n
exit
c
history = History.last
@history.errors.full_messages
@history.valid?
n
c
@history.valid?
@history.is_valid?
n
c
status
c
History.create(x)
x={sloat['M']=> params[:data].to_json}
 params[:data].to_json
 params[:data]
x
c
h
h.save
h= History.new x
x
c
params
c
params[:data]
params
params[:data].except('sloat')
params[:data]
params
c
JSON.parse(params[:data])
JSON.Parse(params[:data])
params[:data]
params
c
params
c
get_price('1/2ltr')
c
n
c
n
@product
c
params
c
params
exit
params
c
params
c
h.save
h=History.new(data: params[:data].permit!)
h=History.new params[:data].permit!
params[:data]
c
params
c
params[:action]
c
n
c
n
params[:action]
params
